using System;

namespace DotNetRocks.FluentSPRibbon
{
    public class RibbonProperty<TRibbonType,TPropertyProvider> where TRibbonType:IRibbonElement
    {
        private TRibbonType _ribbonElement;
        private TPropertyProvider _property;

        internal RibbonProperty(TRibbonType ribbonElement, TPropertyProvider property)
        {
            this._ribbonElement = ribbonElement;
            this._property = property;
        }
        public TRibbonType To(String value)
        {
            this._ribbonElement.SetPropertyTo(_property.ToString(), value);
        }
    }
    public class SuitableRibbonElement<TRibbonTyp, TPropertyProvider>
        : RibbonElementBase
    {
        public SuitableRibbonElement(String id) :base(id)
        {
            
        }

        public RibbonProperty<TRibbonTyp,TPropertyProvider> Set(TPropertyProvider property)
        {
            throw new NotImplementedException();
        }
    }
    public class Button : SuitableRibbonElement<Button,ButtonProperty>
    {
        internal Button():this("NotSet"){}

        internal Button(string id) : base(id)
        {
        }

        internal override string TagName
        {
            get { return "Button"; }
        }
       

        public Button SetPropertyTo(string name, string value)
        {
            base.SetPropertyTo(name, value);
            return this;
        }

    }
}